name: Integration PR

on:
    pull_request:
        branches:
            - integration

jobs:
    quality-check-integration-pr:
        runs-on: ubuntu-latest
        environment:
            name: integration
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Install Salesforce CLI
              run: |
                  npm install @salesforce/cli --global

            - name: "Installing sfdx git delta"
              run: |
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins

            - name: Set up Java 17
              uses: actions/setup-java@v4
              with:
                  distribution: "corretto"
                  java-version: "17"

            - name: "Installing SFDX scanner"
              run: sf plugins install @salesforce/sfdx-scanner

            - name: Authenticate to Integration Org
              run: |
                  sf org login sfdx-url --set-default --sfdx-url-file <(echo "${{ secrets.SFDX_AUTH_URL }}")

            - name: "Create delta packages for new, modified or deleted metadata"
              run: |
                  mkdir changed-sources
                  sfdx sgd:source:delta --from "HEAD~1" --output changed-sources/ --generate-delta --source force-app/

            - name: "Scan code"
              run: |
                  cd changed-sources
                  sf scanner run --format sarif --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.sarif' 
                  cd ..

            - name: Upload SARIF file
              uses: github/codeql-action/upload-sarif@v3
              with:
                  sarif_file: changed-sources/apexScanResults.sarif

            - name: Upload changed-sources folder as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: changed-sources
                  path: changed-sources

            - name: Read PR Body and Determine Tests to Run
              env:
                  PR_BODY: ${{ github.event.pull_request.body }}
              run: |
                  echo "$PR_BODY" > ./pr_body.txt
                  node ./parsePR.js
                  TESTS=$(cat testsToRun.txt)
                  echo $TESTS
                  if [ "$TESTS" == "all" ]; then
                    TEST_LEVEL="RunLocalTests"
                  else
                    TEST_LEVEL="RunSpecifiedTests --tests $TESTS"
                  fi
                  echo "TEST_LEVEL=$TEST_LEVEL" >> $GITHUB_ENV

            - name: Run tests based on PR body specification
              run: |
                  set +e
                  sf project deploy start --dry-run --manifest changed-sources/package/package.xml --post-destructive-changes changed-sources/destructiveChanges/destructiveChanges.xml --test-level ${{ env.TEST_LEVEL }} --verbose > test_results.txt
                  test_exit_code=$?
                  set -e
                  echo "TEST_RESULTS_PATH=test_results.txt" >> $GITHUB_ENV
                  echo "TEST_EXIT_CODE=$test_exit_code" >> $GITHUB_ENV
              shell: bash

            - name: Post results to PR
              uses: actions/github-script@v7
              with:
                  github-token: ${{secrets.GITHUB_TOKEN}}
                  script: |
                      const issue_number = context.issue.number;
                      const fs = require('fs');
                      const test_results = fs.readFileSync(process.env.TEST_RESULTS_PATH, 'utf8');
                      const codeScanningUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/security/code-scanning?query=is%3Aopen+pr%3A${issue_number}`;
                      github.rest.issues.createComment({
                        issue_number: issue_number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: `### Code Scan Results:\n[View Code Scanning Alerts](${codeScanningUrl})\n### Test Results:\n\`\`\`${test_results}\`\`\``
                      });

            - name: Fail if tests failed
              if: env.TEST_EXIT_CODE != '0'
              run: exit 1
