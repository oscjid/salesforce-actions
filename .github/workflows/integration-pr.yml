name: Integration PR

on:
  pull_request:
    branches:
      - integration

jobs:
  quality-check-integration-pr:
    runs-on: ubuntu-latest
    environment:
      name: integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      - name: Installing sfdx git delta
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "17"

      - name: Installing SFDX scanner
        run: sf plugins install @salesforce/sfdx-scanner

      - name: Authenticate to Integration Org
        run: sf org login sfdx-url --set-default --sfdx-url-file <(echo "${{ secrets.SFDX_AUTH_URL }}")

      - name: Create delta packages for new, modified or deleted metadata
        run: |
          mkdir changed-sources
          sfdx sgd:source:delta --to "HEAD" --from "HEAD~1" --output changed-sources/ --generate-delta --source force-app/

      - name: Scan code
        run: |
          cd changed-sources
          sf scanner run --format sarif --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.sarif' 
          cd ..

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: changed-sources/apexScanResults.sarif

      - name: Run tests and capture results
        id: run_tests
        run: |
          sf project deploy start --dry-run --manifest changed-sources/package/package.xml --post-destructive-changes changed-sources/destructiveChanges/destructiveChanges.xml --test-level RunLocalTests --verbose > test_results.txt
          echo "::set-output name=test_exit_code::$?"
          cat test_results.txt
        continue-on-error: true

      - name: Post test results to PR
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const fs = require('fs');
            const test_results = fs.readFileSync('test_results.txt', 'utf8');
            const codeScanningUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/security/code-scanning`;
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Code Scan Results:\n[View Code Scanning Alerts](${codeScanningUrl})\n### Test Results:\n\`\`\`${test_results}\`\`\``
            });

      - name: Fail if tests failed
        if: steps.run_tests.outputs.test_exit_code != '0'
        run: exit 1